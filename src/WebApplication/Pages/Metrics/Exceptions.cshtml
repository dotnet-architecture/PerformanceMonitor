@page
@model WebApplication.Pages.Metrics.ExceptionsModel
@using DataTransfer
@{
    ViewData["Title"] = "Exceptions";
}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>

<div class="main">
    <font size="50">Exceptions</font>

    <p>Total number of exceptions: @Model.totalExceptions</p>

    @if (Model.exceptionSorted.Count >= 1)
    {
        <p>Most common exception: @Model.exceptionSorted[0].Key</p>
    }

    <p>Log of Exceptions</p>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>Exception Type</th>
                <th>Timestamp</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.exceptions != null)
            {
                @for (int i = Model.exceptions.Count - 1; i >= 0; i--)
                {
                    Exceptions e = Model.exceptions[i];
                    <tr>
                        <td>@e.type</td>
                        <td>@e.timestamp</td>
                    </tr>

                }
            }
            else
            {
                <tr>Unable to retrieve data</tr>
            }
        </tbody>
    </table>

    @Model.message
    @Model.test
    <form method="post">
        <input type="text" placeholder="Number of Exceptions" asp-for="@Model.userReqNum" name="userReqNum" /> <br />
        <button class="btn btn-default">Examine</button>
    </form>

    <p>Log of Exceptions by Frequency</p>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>Exception Type</th>
                <th>Frequency</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.exceptions != null)
            {
                int numExceptions = 4;
                if (Model.userReqNum != 0)
                {
                    numExceptions = Model.userReqNum - 1;
                }
                @for (int i = 0; i <= Math.Min(numExceptions, Model.exceptionTracker.Count - 1); i++)
                {
                    KeyValuePair<string, int> e = Model.exceptionSorted[i];
                    <tr>
                        <td>@e.Key</td>
                        <td>@e.Value</td>
                    </tr>

                }
            }
            else
            {
                <tr>Unable to retrieve data</tr>
            }
        </tbody>
    </table>
</div>